[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [
      {
        "doc" : "Table containing each application's name and it's desired configuration. The\nkey of each entry is the name of the App as it appears in the title bar, and\nthe value is a configuration table with the following entries:\n    * title - String with title text to display in the menu bar icon itself\n    * app - Name of the application in EnsureApp config. \n    * action - String with action to take on window when showing. See constants.",
        "stripped_doc" : [
          "Table containing each application's name and it's desired configuration. The",
          "key of each entry is the name of the App as it appears in the title bar, and",
          "the value is a configuration table with the following entries:",
          "    * title - String with title text to display in the menu bar icon itself",
          "    * app - Name of the application in EnsureApp config. ",
          "    * action - String with action to take on window when showing. See constants."
        ],
        "parameters" : [

        ],
        "desc" : "Table containing each application's name and it's desired configuration. The",
        "notes" : [

        ],
        "signature" : "MenuBarApps.apps",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "apps",
        "def" : "MenuBarApps.apps"
      },
      {
        "doc" : "Logger object used within the Spoon. Can be accessed to set the default log \nlevel for the messages coming from the Spoon.",
        "stripped_doc" : [
          "Logger object used within the Spoon. Can be accessed to set the default log ",
          "level for the messages coming from the Spoon."
        ],
        "parameters" : [

        ],
        "desc" : "Logger object used within the Spoon. Can be accessed to set the default log",
        "notes" : [

        ],
        "signature" : "MenuBarApps.logger",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "logger",
        "def" : "MenuBarApps.logger"
      },
      {
        "doc" : "MenuBarApps specific log level override, see hs.logger.setLogLevel for options.",
        "stripped_doc" : [
          "MenuBarApps specific log level override, see hs.logger.setLogLevel for options."
        ],
        "parameters" : [

        ],
        "desc" : "MenuBarApps specific log level override, see hs.logger.setLogLevel for options.",
        "notes" : [

        ],
        "signature" : "MenuBarApps.logLevel",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "logLevel",
        "def" : "MenuBarApps.logLevel"
      },
      {
        "doc" : "Table containing references to all of the created menu bars.",
        "stripped_doc" : [
          "Table containing references to all of the created menu bars."
        ],
        "parameters" : [

        ],
        "desc" : "Table containing references to all of the created menu bars.",
        "notes" : [

        ],
        "signature" : "MenuBarApps.menuBars",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "menuBars",
        "def" : "MenuBarApps.menuBars"
      }
    ],
    "stripped_doc" : [

    ],
    "Deprecated" : [

    ],
    "desc" : "Control applications from the macOS Menu Bar",
    "type" : "Module",
    "Constructor" : [

    ],
    "doc" : "Control applications from the macOS Menu Bar \n\nDownload: https:\/\/github.com\/adammillerio\/Spoons\/raw\/main\/Spoons\/MenuBarApps.spoon.zip\n\nREADME with Example Usage: [README.md](https:\/\/github.com\/adammillerio\/MenuBarApps.spoon\/blob\/main\/README.md)",
    "Method" : [
      {
        "doc" : "Spoon initializer method for MenuBarApps.\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "Spoon initializer method for MenuBarApps.",
          ""
        ],
        "parameters" : [
          " * None",
          ""
        ],
        "desc" : "Spoon initializer method for MenuBarApps.",
        "notes" : [

        ],
        "signature" : "MenuBarApps:init()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "name" : "init",
        "def" : "MenuBarApps:init()"
      },
      {
        "doc" : "Spoon start method for MenuBarApps. Creates all configured menu bars.\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "Spoon start method for MenuBarApps. Creates all configured menu bars.",
          ""
        ],
        "parameters" : [
          " * None",
          ""
        ],
        "desc" : "Spoon start method for MenuBarApps. Creates all configured menu bars.",
        "notes" : [

        ],
        "signature" : "MenuBarApps:start()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "name" : "start",
        "def" : "MenuBarApps:start()"
      },
      {
        "doc" : "Spoon stop method for MenuBarApps. Deletes all configured menu bars.\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "Spoon stop method for MenuBarApps. Deletes all configured menu bars.",
          ""
        ],
        "parameters" : [
          " * None",
          ""
        ],
        "desc" : "Spoon stop method for MenuBarApps. Deletes all configured menu bars.",
        "notes" : [

        ],
        "signature" : "MenuBarApps:stop()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "name" : "stop",
        "def" : "MenuBarApps:stop()"
      }
    ],
    "Command" : [

    ],
    "Field" : [

    ],
    "items" : [
      {
        "doc" : "Table containing each application's name and it's desired configuration. The\nkey of each entry is the name of the App as it appears in the title bar, and\nthe value is a configuration table with the following entries:\n    * title - String with title text to display in the menu bar icon itself\n    * app - Name of the application in EnsureApp config. \n    * action - String with action to take on window when showing. See constants.",
        "stripped_doc" : [
          "Table containing each application's name and it's desired configuration. The",
          "key of each entry is the name of the App as it appears in the title bar, and",
          "the value is a configuration table with the following entries:",
          "    * title - String with title text to display in the menu bar icon itself",
          "    * app - Name of the application in EnsureApp config. ",
          "    * action - String with action to take on window when showing. See constants."
        ],
        "parameters" : [

        ],
        "desc" : "Table containing each application's name and it's desired configuration. The",
        "notes" : [

        ],
        "signature" : "MenuBarApps.apps",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "apps",
        "def" : "MenuBarApps.apps"
      },
      {
        "doc" : "MenuBarApps specific log level override, see hs.logger.setLogLevel for options.",
        "stripped_doc" : [
          "MenuBarApps specific log level override, see hs.logger.setLogLevel for options."
        ],
        "parameters" : [

        ],
        "desc" : "MenuBarApps specific log level override, see hs.logger.setLogLevel for options.",
        "notes" : [

        ],
        "signature" : "MenuBarApps.logLevel",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "logLevel",
        "def" : "MenuBarApps.logLevel"
      },
      {
        "doc" : "Logger object used within the Spoon. Can be accessed to set the default log \nlevel for the messages coming from the Spoon.",
        "stripped_doc" : [
          "Logger object used within the Spoon. Can be accessed to set the default log ",
          "level for the messages coming from the Spoon."
        ],
        "parameters" : [

        ],
        "desc" : "Logger object used within the Spoon. Can be accessed to set the default log",
        "notes" : [

        ],
        "signature" : "MenuBarApps.logger",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "logger",
        "def" : "MenuBarApps.logger"
      },
      {
        "doc" : "Table containing references to all of the created menu bars.",
        "stripped_doc" : [
          "Table containing references to all of the created menu bars."
        ],
        "parameters" : [

        ],
        "desc" : "Table containing references to all of the created menu bars.",
        "notes" : [

        ],
        "signature" : "MenuBarApps.menuBars",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "menuBars",
        "def" : "MenuBarApps.menuBars"
      },
      {
        "doc" : "Spoon initializer method for MenuBarApps.\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "Spoon initializer method for MenuBarApps.",
          ""
        ],
        "parameters" : [
          " * None",
          ""
        ],
        "desc" : "Spoon initializer method for MenuBarApps.",
        "notes" : [

        ],
        "signature" : "MenuBarApps:init()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "name" : "init",
        "def" : "MenuBarApps:init()"
      },
      {
        "doc" : "Spoon start method for MenuBarApps. Creates all configured menu bars.\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "Spoon start method for MenuBarApps. Creates all configured menu bars.",
          ""
        ],
        "parameters" : [
          " * None",
          ""
        ],
        "desc" : "Spoon start method for MenuBarApps. Creates all configured menu bars.",
        "notes" : [

        ],
        "signature" : "MenuBarApps:start()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "name" : "start",
        "def" : "MenuBarApps:start()"
      },
      {
        "doc" : "Spoon stop method for MenuBarApps. Deletes all configured menu bars.\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "Spoon stop method for MenuBarApps. Deletes all configured menu bars.",
          ""
        ],
        "parameters" : [
          " * None",
          ""
        ],
        "desc" : "Spoon stop method for MenuBarApps. Deletes all configured menu bars.",
        "notes" : [

        ],
        "signature" : "MenuBarApps:stop()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "name" : "stop",
        "def" : "MenuBarApps:stop()"
      }
    ],
    "name" : "MenuBarApps"
  }
]
